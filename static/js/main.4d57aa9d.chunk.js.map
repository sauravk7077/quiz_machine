{"version":3,"sources":["Components/Navbar.js","Components/Button.js","Components/Select.js","Components/QuestBox.js","Questions.js","Components/Home.js","Components/End.js","Components/Content.js","App.js","index.js"],"names":["Navbar","props","Button","className","disabled","onClick","value","Select","ansed","active","selected","tabIndex","QuestBox","checkAns","e","state","setState","data","answer","options","addPoints","handleNext","handleFade","setTimeout","show","handleNextBtn","changeIndex","i","this","question","rads","map","key","name","checked","id","React","Component","questions","Home","End","class","score","Content","handleReset","points","mode","index","s","handleNextQuestion","length","handleStartClick","display","App","href","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4d57aa9d.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Navbar(props){\r\n    return(\r\n        <header>\r\n            <h1>Quiz Machine</h1>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Navbar;","import React from \"react\";\r\n\r\nfunction Button(props){\r\n    return(\r\n        <button\r\n          className={`btn`}\r\n          disabled={props.disabled}\r\n          onClick={props.onClick}>{props.value}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default Button;","import React from \"react\"\r\n\r\nfunction Select(props){\r\n    return (\r\n        <button\r\n         className={`selectBtn ${props.ansed?props.active:''} ${props.selected?'selected':''}`} \r\n         tabIndex=\"1\"\r\n         onClick={props.onClick}>\r\n            {props.value}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default Select;","import React from \"react\";\r\nimport Button from \"./Button\";\r\nimport Select from \"./Select\";\r\n\r\n\r\nconst fadeTime = 1000;\r\nclass QuestBox extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      selected: 0,\r\n      active: false,\r\n      show: true,\r\n    };\r\n  }\r\n  checkAns = (e)=> {\r\n    if (!this.state.active) {\r\n      this.setState({\r\n        active: true\r\n      },()=>{\r\n        if (\r\n          this.props.data.answer == this.props.data.options[this.state.selected]\r\n        )\r\n          this.props.addPoints();\r\n      });\r\n      \r\n    }\r\n  };\r\n\r\n\r\n  handleNext = (e)=> {\r\n    this.handleFade();\r\n    setTimeout(()=>{\r\n      this.setState({\r\n        active: false,\r\n        show: true,\r\n        selected: 0,\r\n      });\r\n      this.props.handleNextBtn();\r\n    }, fadeTime);\r\n    \r\n  };\r\n\r\n  handleFade= ()=> {\r\n    this.setState({ show: !this.state.show });\r\n  }\r\n\r\n  changeIndex= (i)=> {\r\n    this.setState({\r\n      selected: i,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    let { question, options, answer } = this.props.data;\r\n    let rads = options.map((e, i) => {\r\n      let active;\r\n      if (this.state.active) {\r\n        if (e == answer){\r\n         active = \"green\";\r\n        }\r\n        else \r\n          active = \"red\";\r\n      }\r\n\r\n      return (\r\n        <Select\r\n          key={i}\r\n          value={e}\r\n          ansed={this.state.active}\r\n          active={active}\r\n          name=\"questionValue\"\r\n          selected={this.state.selected == i}\r\n          onClick={(e) => {\r\n            this.changeIndex(i);\r\n          }}\r\n          checked={this.state.selected == i}\r\n        />\r\n      );\r\n    });\r\n    return (\r\n      <div\r\n        className={`questionBox ${this.state.show?'enter':'exit'}`}\r\n      >\r\n        <div className=\"mainQuestion\">{question}</div>\r\n        <div id=\"options\">{rads}</div>\r\n        <div className=\"buttons\">\r\n          <Button value=\"Check your answer\" onClick={this.checkAns} />\r\n          <Button value=\"Next\" disabled={!this.state.active} onClick={this.handleNext} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default QuestBox;\r\n;","export const questions = [\r\n    {\r\n        question: \"Who is the first person to reach North Pole?\",\r\n        options: [\"Robert Peary\", \"Rajesh Sharma\", \"Charles Hillary\",\"Johan don\"],\r\n        answer: \"Robert Peary\"\r\n    },\r\n    {\r\n        question: \"Who is the first person to reach the South Pole?\",\r\n        options: [\"Amundsen\", \"Rajesh Sharma\",\"Charles Hillary\",\"Johan don\"],\r\n        answer: \"Amundsen\"\r\n    },\r\n    {\r\n        question: \"Which is the first country to issue paper currency?\",\r\n        options: [\"China\", \"India\", \"USA\", \"UK\"],\r\n        answer: \"China\"\r\n    },\r\n    {\r\n        question: \"Who is the  first Governor General of the United Nations?\",\r\n        options: [\"Trigveli (Norway)\", \"Robert Walpole\", \"Henry Waterloo\", \"George Bush\"],\r\n        answer: \"Trigveli (Norway)\"\r\n    },\r\n    {\r\n        question: \" Which is the first country to host NAM summit?\",\r\n        options: [\"Belgrade (Yugoslavia)\", \"India\", \"USA\", \"UK\"],\r\n        answer: \"Belgrade (Yugoslavia)\"\r\n    },\r\n    {\r\n        question: \"Who was the first person to sail round the world?\",\r\n        options: [\"Magellan\", \"Robert Walpole\", \"Henry Waterloo\", \"George Bush\"],\r\n        answer: \"Magellan\"\r\n    },\r\n]","import React from \"react\";\r\nimport Button from \"./Button\";\r\n\r\nfunction Home(props) {\r\n    return (\r\n        <div><Button onClick={props.onClick} value=\"Favourite Foods Quiz\"></Button></div>\r\n    )\r\n}\r\n\r\nexport default Home;","import React from \"react\";\r\nimport Button from \"./Button\";\r\n\r\nfunction End(props){\r\n    return(\r\n        <div class=\"end\">\r\n            <h3>Score: {props.score * 10}</h3>\r\n            <Button value=\"Restart\" onClick={props.onClick}/>\r\n            <p>A right anwer adds 10 points to your score.</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default End;","import React from \"react\";\r\nimport QuestBox from \"./QuestBox\";\r\nimport {questions} from \"../Questions\";\r\nimport Button from \"./Button\";\r\nimport Home from \"./Home\";\r\nimport End from \"./End\"\r\nimport \"../styles/main.css\";\r\n\r\nclass Content extends React.Component{\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            points: 0,\r\n            mode: 'start',\r\n            index: 0\r\n        }\r\n    }\r\n\r\n    handleReset =()=>{\r\n        this.setState({\r\n            points: 0,\r\n            mode: 'quiz',\r\n            index: 0\r\n        })\r\n    }\r\n\r\n    addPoints = ()=>{\r\n        this.setState(s=>({\r\n            points: s.points + 1\r\n        }))\r\n    }\r\n\r\n    handleNextQuestion=(e)=>{\r\n        if(this.state.index != questions.length-1){\r\n            this.setState(s=>({\r\n                index: s.index + 1\r\n            }))\r\n        }else{\r\n            this.setState({index: 0,mode: 'finish'})\r\n        }\r\n    }\r\n\r\n    handleStartClick =(e)=>{\r\n        this.setState({\r\n            mode: 'quiz'\r\n        })\r\n    }\r\n    render(){\r\n        let display;\r\n        if(this.state.mode == 'start'){\r\n            display = (\r\n                <Home onClick={this.handleStartClick}/>\r\n            )\r\n        }else if(this.state.mode == 'quiz'){\r\n            display = (\r\n                <div>\r\n                    {/* <div>Points: {this.state.points}</div> */}\r\n                    <QuestBox data={questions[this.state.index]} addPoints={this.addPoints} handleNextBtn={this.handleNextQuestion}/>\r\n                </div>\r\n            )\r\n        }else if(this.state.mode == 'finish'){\r\n            display = (\r\n                <div><End score={this.state.points} onClick={this.handleReset}/></div>\r\n            )\r\n        }\r\n        return (\r\n            <div className=\"questBox\">\r\n                <div>{display}</div>\r\n            </div>\r\n            );\r\n    }\r\n}\r\n\r\nexport default Content;","import React from 'react';\nimport Navbar from \"./Components/Navbar\";\nimport Content from \"./Components/Content\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Navbar></Navbar>\n      <Content></Content>\n      <footer>\n        Design Inspired by <a href=\"https://dribbble.com/shots/7434980-Landing-Quiz?utm_source=Clipboard_Shot&utm_campaign=fguayama&utm_content=Landing%20Quiz&utm_medium=Social_Share\">Dribbble</a>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n  ,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}